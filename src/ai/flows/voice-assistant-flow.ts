
'use server';
/**
 * @fileOverview A basic voice assistant AI flow.
 * This flow takes user text input and returns an AI-generated text response.
 *
 * - voiceAssistantFlow - A function that handles the interaction.
 * - VoiceAssistantInput - The input type for the voiceAssistantFlow function.
 * - VoiceAssistantOutput - The return type for the voiceAssistantFlow function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const VoiceAssistantInputSchema = z.object({
  userInput: z.string().describe('The text input from the user.'),
});
export type VoiceAssistantInput = z.infer<typeof VoiceAssistantInputSchema>;

const VoiceAssistantOutputSchema = z.object({
  assistantResponse: z.string().describe('The text response generated by the AI assistant.'),
});
export type VoiceAssistantOutput = z.infer<typeof VoiceAssistantOutputSchema>;

export async function voiceAssistant(
  input: VoiceAssistantInput
): Promise<VoiceAssistantOutput> {
  return voiceAssistantFlow(input);
}

const prompt = ai.definePrompt({
  name: 'voiceAssistantPrompt',
  input: {schema: VoiceAssistantInputSchema},
  output: {schema: VoiceAssistantOutputSchema},
  prompt: `You are a helpful and friendly voice assistant.
The user said: "{{userInput}}"
Respond concisely and helpfully.`,
});

const voiceAssistantFlow = ai.defineFlow(
  {
    name: 'voiceAssistantFlow',
    inputSchema: VoiceAssistantInputSchema,
    outputSchema: VoiceAssistantOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
